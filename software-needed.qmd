---
engine: knitr
jupyter: python3
---
# Software Needed {#sec-software-needed}

## R and RStudio

{{< include sections/_r-rstudio-installation.qmd >}}

## Git and a GitHub Account

You can get all you need to know about git from the [Pro Git Book](https://git-scm.com/book/en/v2). Great introduction to version control and git. 

[Git and GitHub](https://github.com/carpentries-incubator/reproducible-publications-quarto/blob/main/setup.md)

::: callout-tip
We will use `git` within RStudio. On macOS, RStudio will echo the mac terminal. I am using [Oh My Zsh](https://ohmyz.sh/) as my `zsh` framework, and [iTerm2](https://iterm2.com/) as my terminal emulator rather than the macOS default terminal application. I also have the latest `git` version installed through [Homebrew](https://brew.sh/).

Update: I switched my terminal emulator to [Wezterm](https://wezfurlong.org/wezterm/index.html). I installed the [Starship](https://starship.rs/) prompt to customize my terminal environment. I installed both using Homebrew. 


This means that I need to adjust the settings in RStudio to use my `zsh` environment. Go to *Tools* → *Global Options* → *Terminal* and choose `Zsh` from the drop-down menu for the *New terminals open with* option.
:::

### Git Tutorials

::: {.callout-important}

Here are the learning objectives for the git section. After taking the tutorials, you will be able to:

1. Create a GitHub account.
2. Install Git on your local computer.
3. Create `ssh` keys to connect your local computer to GitHub.
4. Create a project and push it to GitHub.
5. Fork a project from GitHub.

:::

#### Videos

- [Git and GitHub for Beginners - Crash Course](https://www.youtube.com/watch?v=RGOj5yH7evk)
- [Git Tutorial for Absolute Beginners](https://www.youtube.com/watch?v=CvUiKWv2-C0)
- [How to setup SSH in GitHub by example](https://www.theserverside.com/blog/Coffee-Talk-Java-News-Stories-and-Opinions/GitHub-SSH-Key-Setup-Config-Ubuntu-Linux)
- [How to SSH into GitHub on Windows example](https://www.theserverside.com/blog/Coffee-Talk-Java-News-Stories-and-Opinions/GitHub-SSH-Windows-Example)
- [How to Fork a GitHub Repository](https://www.freecodecamp.org/news/how-to-fork-a-github-repository/)

#### Text-based

- [Learn the Basics of Git in Under 10 Minutes](https://www.freecodecamp.org/news/learn-the-basics-of-git-in-under-10-minutes-da548267cc91/)
- [How to Fork a GitHub Repository](https://www.freecodecamp.org/news/how-to-fork-a-github-repository/)
- [Fork a repository](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/fork-a-repo)


#### More Guides to Git

- [Introduction to Version Control ](https://www.atlassian.com/git/tutorials/what-is-version-control)
  This is hosted by Atlassian, a company that uses their own cloud-based git repository called BitBucket. We will be using GitHub for all our work, so if you try tutorials on this site, remember to use `github` instead of `bitbucket` when connecting to the remote repository. Focus on the *Beginner* and *Getting Started* sections. 

- [An "adavanced beginner" guide to git](https://think-like-a-git.net/sections/about-this-site.html)



## VS Code

{{< include sections/_vs-code-installation.qmd >}}

## Zotero

{{< include sections/_zotero-installation.qmd >}}

## ChimeraX

{{< include sections/_chimerax-installation.qmd >}}

## RealVNC Viewer

{{< include sections/_vnc-viewer-installation.qmd >}}

## Optional Software

### Anaconda

#### Update Homebrew

In terminal:

```{zsh}
#| eval: false
#| echo: true
#| filename: "Terminal"

cd ~
brew update       # <1>
brew upgrade      # <2>
```

1.  Update the Homebrew package manager.
2.  Upgrade the packages in Homebrew. *Note*: This can take a long time (hours) depending on how many packages need upgrading.

#### Install Anaconda

```{zsh}
#| eval: false
#| echo: true
#| filename: "Terminal"

brew install --cask anaconda
```

After installation is complete, add the path to `.zshrc` and restart shell.

```{zsh}
#| eval: false
#| echo: true
#| filename: "Terminal"

echo 'export PATH="/usr/local/Homebrew/anaconda3/bin:$PATH"' >> ~/.zshrc
source ~/.zshrc
```

#### Activate Anaconda

```{zsh}
#| eval: false
#| echo: true
#| filename: "Terminal"

source /usr/local/Homebrew/anaconda3/bin/activate   # <1>
conda init zsh    # <2>
```

1.  Use the path to the Homebrew-installed Anaconda.
2.  Initialize your preferred shell to work with `conda.`

Test the installation.

```{zsh}
#| eval: false
#| echo: true
#| filename: "Terminal"

conda --version
conda 25.4.0
```

✅ Success!

#### Create and activate a `conda` Environment for the Plumed Masterclass Tutuorial

```{zsh}
#| eval: false
#| echo: true
#| filename: "Terminal"

conda create --name plumed-masterclass-2022
```

Activate the environment with:

```{zsh}
#| eval: false
#| echo: true
#| filename: "Terminal"

conda activate plumed-masterclass-2022
```

::: callout-note
To deactivate an active environment, use

```{zsh}
#| eval: false
#| echo: true
#| filename: "Terminal"

conda deactivate
```
:::
